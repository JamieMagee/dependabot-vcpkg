name: Run Dependabot
on:
  workflow_dispatch:

jobs:
  run-dependabot:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: repo

      - name: Checkout Dependabot config
        uses: actions/checkout@v4
        with:
          repository: dependabot/dependabot-core
          ref: jamiemagee/vcpkg-updater
          path: core

      - name: Build vcpkg toolchain updater
        working-directory: core
        run: |
          ./script/build vcpkg

      - name: Checkout Dependabot CLI
        uses: actions/checkout@v4
        with:
          repository: dependabot/cli
          ref: jamiemagee/vcpkg
          path: cli

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Build Dependabot CLI
        working-directory: cli
        run: |
          go build cmd/dependabot/dependabot.go
          ./dependabot --version

      - name: Run Dependabot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Run Dependabot CLI with options:
          # -f: the path to the job input
          # --local: use the locally checked out code instead of cloning each time
          # --timeout: the maximum time to wait for a job to finish
          ./cli/dependabot update \
            -f repo/.github/dependabot/vcpkg.yml \
            --local repo \
            --timeout 20m >> result.jsonl || true

      - name: Upload result
        uses: actions/upload-artifact@v4
        with:
          name: dependabot-result
          path: result.jsonl

  create-prs:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    needs: run-dependabot
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download result
        uses: actions/download-artifact@v4
        with:
          name: dependabot-result

      - name: Create PRs
        env:
          GH_TOKEN: ${{ github.token }}
        run: bash create.sh result.jsonl